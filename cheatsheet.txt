first vue instance
=========================================
new Vue ({
  el: '#root',
  data: {
    message: 'some message'
  }
})
//in html
<div id="root">
  <input type="text" v-model="message" />
  <p>{{ message }}</p>
</div>

v-for, v-text
=========================
<li v-for="name in names" v-text="name"></li>
mounted() {}

v-on:keyup, v-on:click || @click, methods: {}, directive:argument
======================================================================
<button v-on:click="addName" id="button">add name</button>
        ====:=====
        directive: argument
<button @click="addName" id="button">add name</button>
methods: {
  addName() {
  }
}

attribute binding v-bind:title="" || :title
===========================================================================
<button v-bind:title="title" :class="{ isActive: isActive }" @click="toggleIsActive">Hello world</button>

v-if, computed
===================================================================
<li v-if="task.completed" v-for="task in tasks" v-text="task.name"></li>
<li v-for="task in inCompletedTasks" v-text="task.name"></li>
computed: {
  inCompletedTasks() {
    return this.tasks.filter(task => !task.completed)
  }
}
//inside console
$vm0.tasks[0].completed = false

Vue component, slot
=====================================================
Vue.component('task', {
  template: '<li><slot></slot></li>'
})
new Vue({
  el : '#root'
})
<task>Hello</task>
<task>World</task>

v-for inside Vue.component, data function inside vue.component
=====================================================
Vue.component('task-list', {
  template: `
    <div>
      <task v-for="task in tasks">{{task.name}}</task>
    </div>
  `,
  data () {
    return {
      tasks : []
    }
  }
}

v-show, message box hiding
=================================
<button class="delete" @click="hideMessage"></button>
<button class="delete" @click="isActive = false"></button>
<article class="message" v-show="isActive">

custom function emit, hiding modal and closing
==============================================================
//index.htm
<modal v-show="modal" @close="hideModal"></modal>
//script > template     |
<button @click="$emit('close')" class="modal-close"></button>

bulma tab practice, this.$children, 
==============================================================
mounted () {
  this.tabs = this.$children
},
//tab props
props: {
  name: {required: true},
  selected: {default: false}
},
v-show now work inside <slot></slot>

communication between child and parents
==============================================================
<coupon @applied="onCouponApplied"></coupon>
<p v-if="isCouponApplied">coupon was applied</p>
//scripts
localOnCouponApplied () {
  this.$emit('applied')
}
onCouponApplied() {
  this.isCouponApplied = true
}

communication in between child, parents and siblings $emit() and $on
==============================================================
$emit(event, data) // for firing a event
$on (event, callback) // for listening a event
created () {
  Event.listen('applied', function() {
    alert('coupon handled');
  })
}

name slot and default slot
==============================================================
<template slot="title">This is heading</template>
<div slot="footer">footer content</div>
//scripts > template:
<slot name="title"></slot>
<slot name="footer"> default footer content </slot>

inline-template in chapter 15
==============================================================
<progress-view inline-template>












